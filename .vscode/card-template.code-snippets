{
  "Attack card": {
    "scope": "java",
    "prefix": "attackcard",
    "body": [
      "package inklingMod.cards$1;",
      "",
      "import com.megacrit.cardcrawl.actions.AbstractGameAction;",
      "import com.megacrit.cardcrawl.actions.common.DamageAction;",
      "import com.megacrit.cardcrawl.cards.DamageInfo;",
      "import com.megacrit.cardcrawl.characters.AbstractPlayer;",
      "import com.megacrit.cardcrawl.core.CardCrawlGame;",
      "import com.megacrit.cardcrawl.localization.CardStrings;",
      "import com.megacrit.cardcrawl.monsters.AbstractMonster;",
      "",
      "import basemod.abstracts.CustomCard;",
      "import inklingMod.InklingMod;",
      "import inklingMod.characters.TheInkling;",
      "",
      "public class $TM_FILENAME_BASE extends CustomCard {",
      "  public static final String ID = InklingMod.makeID($TM_FILENAME_BASE.class.getSimpleName());",
      "  private static final CardStrings cardStrings = CardCrawlGame.languagePack.getCardStrings(ID);",
      "  public static final String NAME = cardStrings.NAME;",
      "  public static final String DESCRIPTION = cardStrings.DESCRIPTION;",
      "",
      "  public static final String IMG = InklingMod.makeCardPath(\"$TM_FILENAME_BASE.png\");",
      "  private static final CardRarity RARITY = CardRarity.${2:BASIC};",
      "  private static final CardTarget TARGET = CardTarget.ENEMY;",
      "  private static final CardType TYPE = CardType.ATTACK;",
      "  public static final CardColor COLOR = TheInkling.Enums.COLOR_GRAY;",
      "",
      "  private static final int COST = ${3:1};",
      "  private static final int DAMAGE = 6;",
      "  private static final int UPGRADE_PLUS_DMG = 3;",
      "",
      "  public $TM_FILENAME_BASE() {",
      "    super(ID, NAME, IMG, COST, DESCRIPTION, TYPE, COLOR, RARITY, TARGET);",
      "",
      "    baseDamage = DAMAGE;",
      "  }",
      "",
      "  @Override",
      "  public void use(AbstractPlayer p, AbstractMonster m) {",
      "    $7addToBot(new DamageAction(m, new DamageInfo(p, damage, damageTypeForTurn),",
      "        AbstractGameAction.AttackEffect.SLASH_HORIZONTAL));",
      "  }",
      "",
      "  @Override",
      "  public void upgrade() {",
      "    if (!upgraded) {",
      "      upgradeName();",
      "      upgradeDamage(UPGRADE_PLUS_DMG);",
      "      initializeDescription();",
      "    }",
      "  }",
      "}"
    ]
  },
  "Power card": {
    "scope": "java",
    "prefix": "powercard",
    "body": [
      "package inklingMod.cards$1;",
      "",
      "import com.megacrit.cardcrawl.actions.common.ApplyPowerAction;",
      "import com.megacrit.cardcrawl.characters.AbstractPlayer;",
      "import com.megacrit.cardcrawl.core.CardCrawlGame;",
      "import com.megacrit.cardcrawl.localization.CardStrings;",
      "import com.megacrit.cardcrawl.monsters.AbstractMonster;",
      "",
      "import basemod.abstracts.CustomCard;",
      "import inklingMod.InklingMod;",
      "import inklingMod.characters.TheInkling;",
      "",
      "public class $TM_FILENAME_BASE extends CustomCard {",
      "  public static final String ID = InklingMod.makeID($TM_FILENAME_BASE.class.getSimpleName());",
      "  private static final CardStrings cardStrings = CardCrawlGame.languagePack.getCardStrings(ID);",
      "  public static final String NAME = cardStrings.NAME;",
      "  public static final String DESCRIPTION = cardStrings.DESCRIPTION;",
      "",
      "  public static final String IMG = InklingMod.makeCardPath(\"$TM_FILENAME_BASE.png\");",
      "  private static final CardRarity RARITY = CardRarity.${2:BASIC};",
      "  private static final CardTarget TARGET = CardTarget.SELF;",
      "  private static final CardType TYPE = CardType.POWER;",
      "  public static final CardColor COLOR = TheInkling.Enums.COLOR_GRAY;",
      "",
      "  private static final int COST = ${3:1};",
      "",
      "  public $TM_FILENAME_BASE() {",
      "    super(ID, NAME, IMG, COST, DESCRIPTION, TYPE, COLOR, RARITY, TARGET);",
      "  }",
      "",
      "  @Override",
      "  public void use(AbstractPlayer p, AbstractMonster m) {",
      "    $4",
      "  }",
      "",
      "  @Override",
      "  public void upgrade() {",
      "    if (!upgraded) {",
      "      upgradeName();",
      "      $5",
      "      initializeDescription();",
      "    }",
      "  }",
      "}"
    ]
  },
  "Power": {
    "scope": "java",
    "prefix": "power",
    "body": [
      "package inklingMod.powers$1;",
      "",
      "import com.badlogic.gdx.graphics.Texture;",
      "import com.badlogic.gdx.graphics.g2d.TextureAtlas;",
      "import com.megacrit.cardcrawl.core.AbstractCreature;",
      "import com.megacrit.cardcrawl.core.CardCrawlGame;",
      "import com.megacrit.cardcrawl.localization.PowerStrings;",
      "import com.megacrit.cardcrawl.powers.AbstractPower;",
      "",
      "import basemod.interfaces.CloneablePowerInterface;",
      "import inklingMod.InklingMod;",
      "import inklingMod.util.TextureLoader;",
      "",
      "public class $TM_FILENAME_BASE extends AbstractPower implements CloneablePowerInterface {",
      "  public static final String POWER_ID = InklingMod.makeID($TM_FILENAME_BASE.class.getSimpleName());",
      "  private static final PowerStrings powerStrings = CardCrawlGame.languagePack.getPowerStrings(POWER_ID);",
      "  public static final String NAME = powerStrings.NAME;",
      "  public static final String[] DESCRIPTIONS = powerStrings.DESCRIPTIONS;",
      "",
      "  private static final Texture tex84 = TextureLoader.getTexture(",
      "      InklingMod.makePowerPath(\"${TM_FILENAME_BASE}84.png\"));",
      "  private static final Texture tex32 = TextureLoader.getTexture(",
      "      InklingMod.makePowerPath(\"${TM_FILENAME_BASE}32.png\"));",
      "",
      "  public $TM_FILENAME_BASE(final AbstractCreature owner) {",
      "    this.name = NAME;",
      "    this.ID = POWER_ID;",
      "",
      "    this.owner = owner;",
      "    this.amount = -1;",
      "",
      "    this.type = PowerType.${2:BUFF};",
      "    this.isTurnBased = false;",
      "",
      "    this.region128 = new TextureAtlas.AtlasRegion(tex84, 0, 0, 84, 84);",
      "    this.region48 = new TextureAtlas.AtlasRegion(tex32, 0, 0, 32, 32);",
      "",
      "    updateDescription();",
      "  }",
      "",
      "  @Override",
      "  public void updateDescription() {",
      "    this.description = DESCRIPTIONS[0];",
      "  }",
      "",
      "  @Override",
      "  public AbstractPower makeCopy() {",
      "    return new $TM_FILENAME_BASE(this.owner);",
      "  }",
      "}"
    ]
  },
  "Weapon power": {
    "scope": "java",
    "prefix": "weaponpower",
    "body": [
      "package inklingMod.powers.weapons;",
      "",
      "import com.megacrit.cardcrawl.actions.common.MakeTempCardInHandAction;",
      "import com.megacrit.cardcrawl.cards.AbstractCard;",
      "import com.megacrit.cardcrawl.core.AbstractCreature;",
      "import com.megacrit.cardcrawl.core.CardCrawlGame;",
      "import com.megacrit.cardcrawl.localization.PowerStrings;",
      "import com.megacrit.cardcrawl.powers.AbstractPower;",
      "",
      "import basemod.interfaces.CloneablePowerInterface;",
      "import inklingMod.InklingMod;",
      "import inklingMod.cards.weapons.${TM_FILENAME_BASE/Power$//};",
      "import inklingMod.cards.weapons.shots.${1:Shot};",
      "",
      "public class $TM_FILENAME_BASE extends AbstractWeaponPower implements CloneablePowerInterface {",
      "  public static final String POWER_ID = InklingMod.makeID($TM_FILENAME_BASE.class.getSimpleName());",
      "  private static final PowerStrings powerStrings = CardCrawlGame.languagePack.getPowerStrings(POWER_ID);",
      "  public static final String NAME = powerStrings.NAME;",
      "  public static final String[] DESCRIPTIONS = powerStrings.DESCRIPTIONS;",
      "",
      "  public $TM_FILENAME_BASE(final AbstractCreature owner) {",
      "    this.name = NAME;",
      "    this.ID = POWER_ID;",
      "    this.owner = owner;",
      "  }",
      "",
      "  @Override",
      "  public void atStartOfTurn() {",
      "    flash();",
      "    AbstractCard card = new ${1:Shot}();",
      "    addToBot(new MakeTempCardInHandAction(card, ${2:1}, false));",
      "  }",
      "",
      "  @Override",
      "  protected AbstractCard createWeaponPowerCard() {",
      "    AbstractCard card = new ${TM_FILENAME_BASE/Power$//}();",
      "    return card;",
      "  }",
      "",
      "  @Override",
      "  public void updateDescription() {",
      "    this.description = DESCRIPTIONS[0];",
      "  }",
      "",
      "  @Override",
      "  public AbstractPower makeCopy() {",
      "    return new $TM_FILENAME_BASE(this.owner);",
      "  }",
      "}"
    ]
  }
}
